<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:x="jelly:xml">
    <st:contentType value="text/html;charset=UTF-8" />
    <j:new var="h" className="hudson.Functions"/>
    ${h.initPageVariables(context)}
    <x:doctype name="html" />
    <html lang="en">
        <head>
            <meta charset="utf-8" />
            <meta http-equiv="X-UA-Compatible" content="IE=edge" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />

            <title>Jenkins - ${%Title}</title>

            <!-- Bootstrap -->
            <link href="${app.rootUrl}plugin/pipeline-aggregator-view/css/bootstrap.min.css" type="text/css" rel="stylesheet" />
            <!-- Mission Control -->
            <link href="${app.rootUrl}plugin/pipeline-aggregator-view/css/pipeline-aggregator.css" type="text/css" rel="stylesheet" />
            <style>
                body, th, td, button.btn { font-size: ${it.fontSize}px; }
            </style>
        </head>
        <body class="height100perc">
<<<<<<< Updated upstream
=======
            <script type="text/javascript">
                var jenkinsUrl = '${rootURL}';
                var refreshInterval = ${it.refreshInterval}*1000;
                var nodeStatuses = [];
                var buildHistorySize = ${it.buildHistorySize};
                var useScrollingCommits= ${it.useScrollingCommits};
                var onlyLastBuild= ${it.onlyLastBuild};
                var showCommitInfo = ${it.showCommitInfo};
                var showBuildNumber = ${it.showBuildNumber};
                var showBuildTime = ${it.showBuildTime};
                var showBuildDuration = ${it.showBuildDuration};
                var rollingCommits = false;
                var url = window.location.href
                function reload_info (interval) {
                    reload_jenkins_build_history('#jenkinsBuildHistory',url, buildHistorySize, useScrollingCommits, onlyLastBuild, showCommitInfo, showBuildNumber, showBuildTime, showBuildDuration);
                    setTimeout(function(){ reload_info(interval); }, interval);
                }
            </script>

>>>>>>> Stashed changes
            <a href="${rootURL}/${it.url}configure" alt="Configure view">
                <div class="abs-top-right">
                    <span class="glyphicon glyphicon-cog"></span>
                </div>
            </a>
            <div class="container-fluid height100perc">
                <!-- Left half -->
                <div class="height100perc">
                    <div>
                        <h4>${%BuildHistory}</h4>
                        <!-- VIEW_URL/api/json -->
                        <table id="jenkinsBuildHistory" class="table table-striped table-bordered ${it.tableStyle}">
                            <thead>
                                <tr><th class="text-left">${%Job}</th><th>Stages</th><th>${%Commits}</th><th>${%Build}</th><th>${%Finished}</th><th>${%Duration
                                }</th></tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>
            <script src="${rootURL}/plugin/pipeline-aggregator-view/lib/jquery.min.js"></script>
            <script src="${rootURL}/plugin/pipeline-aggregator-view/lib/bootstrap.min.js"></script>
            <script src="${rootURL}/plugin/pipeline-aggregator-view/js/pipeline-aggregator.js"></script>
            <script type="text/javascript">
                var jenkinsUrl = '${rootURL}';
                var refreshInterval = 15*1000;
                var nodeStatuses = [];
                var buildHistorySize = ${it.buildHistorySize};
                var useScrollingCommits= ${it.useScrollingCommits};
                var onlyLastBuild= ${it.onlyLastBuild};
                var rollingCommits = false;
                function reload_info (interval) {
                    reload_jenkins_build_history('#jenkinsBuildHistory', jenkinsUrl + '/${it.url}', buildHistorySize, useScrollingCommits, onlyLastBuild);
                    setTimeout(function(){ reload_info(interval); }, interval);
                }

                $$(document).ready(function(){
                    $$.ajaxSetup({ cache: false });
                    reload_info(refreshInterval);
                });
            </script>
        </body>
    </html>
</j:jelly>